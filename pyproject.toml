[project]
name = "prefect"
dynamic = ["version"]
description = "Workflow orchestration and management."
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Natural Language :: English",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
]
keywords = ["ai", "chatbot", "llm", "NLP", "natural language processing"]
requires-python = ">=3.9"
dependencies = [
    "aiosqlite>=0.17.0",
    "alembic>=1.7.5,<2.0.0",
    "apprise>=1.1.0,<2.0.0",
    "asyncpg>=0.23",
    "click>=8.0,<8.2",
    "cryptography>=36.0.1",
    "dateparser>=1.1.1,<2.0.0",
    "docker>=4.0,<7.0",
    "graphviz>=0.20.1",
    "griffe>=0.20.0",
    "jinja2>=3.0.0,<4.0.0",
    "kubernetes>=24.2.0,<30.0.0",
    "pytz>=2021.1,<2025",
    "readchar>=4.0.0,<5.0.0",
    "sqlalchemy[asyncio]>=1.4.22,!=1.4.33,<3.0.0",
    "typer>=0.4.2",
    "prefect[client]"
]

[project.optional-dependencies]
client = [
    "anyio>=3.7.1,<4.0.0",
    "asgi-lifespan>=1.0,<3.0",
    "cachetools>=5.3,<6.0",
    "cloudpickle>=2.0,<4.0",
    "coolname>=1.0.4,<3.0.0",
    "croniter>=1.0.12,<3.0.0",
    "fsspec>=2022.5.0",
    "graphviz>=0.20.1",
    "griffe>=0.20.0",
    "httpcore>=0.15.0,<2.0.0",
    "httpx[http2]>=0.23,!=0.23.2",
    "importlib_metadata>=4.4; python_version < '3.10'",
    "importlib-resources>=6.1.3,<6.2.0",
    "jsonpatch>=1.32,<2.0",
    "jsonschema>=3.2.0,<5.0.0",
    "orjson>=3.7,<4.0",
    "packaging>=21.3,<24.3",
    "pathspec>=0.8.0",
    "pendulum<3.0; python_version < '3.12'",
    "pendulum>=3.0.0,<4; python_version >= '3.12'",
    "pydantic>=2.4.0, <3.0.0",
    "python_dateutil>=2.8.2,<3.0.0",
    "python-slugify>=5.0,<9.0",
    "pyyaml>=5.4.1,<7.0.0",
    "rfc3339-validator>=0.1.4,<0.2.0",
    "rich>=11.0,<14.0",
    "ruamel.yaml>=0.17.0",
    "sniffio>=1.3.0,<2.0.0",
    "toml>=0.10.0",
    "typing_extensions>=4.5.0,<5.0.0",
    "ujson>=5.8.0,<6.0.0",
    "uvicorn>=0.14.0",
    "websockets>=10.4,<13.0",
    "itsdangerous",
    "python-multipart>=0.0.7"
]
dev = [
    "ruff",
    "cairosvg",
    "codespell>=2.2.6",
    "ipython==8.12.*; python_version == '3.8'",
    "ipython; python_version > '3.8'",
    "jinja2",
    "mkdocs",
    "mkdocs-gen-files",
    "mkdocs-material",
    "mkdocstrings-python",
    "mike",
    "mock; python_version < '3.8'",
    "moto>=5",
    "mypy",
    "numpy",
    "pillow",
    "pre-commit",
    "pluggy>=1.4.0",
    "pytest>7,<8",
    "pytest-asyncio>=0.18.2,!=0.22.0,<0.23.0",
    "pytest-cov",
    "pytest-benchmark",
    "pytest-env",
    "pytest-flakefinder",
    "pytest-timeout",
    "pytest-xdist<3.4.0",
    "pytkdocs>=0.14.2",
    "pyyaml",
    "requests",
    "setuptools!=60.9.0; python_version < '3.8'",
    "vermin",
    "virtualenv",
    "watchfiles",
    "respx"
]

[project.urls]
Code = "https://github.com/prefecthq/prefect"
Documentation = "https://www.prefect.io"

[project.scripts]
marvin = "prefect.cli:app"

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/prefect/_version.py"

# pytest configuration
[tool.pytest.ini_options]
markers = [
    "service(arg): a service integration test. For example 'docker'",
    "enable_api_log_handler: by default, sending logs to the API is disabled. Tests marked with this use the handler",
    "clear_db: marker to clear the database after test completion"
    ]
timeout = 20
testpaths = ["tests"]

norecursedirs = [
    "*.egg-info",
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".vscode",
    "node_modules",
]

asyncio_mode = 'auto'

filterwarnings = [
    "ignore:'crypt' is deprecated and slated for removal in Python 3.13:DeprecationWarning",
]
env = [
    "PREFECT_TEST_MODE=1",
    'PYTEST_TIMEOUT=20',
]

# ruff configuration
[tool.ruff]
target-version = "py39"
lint.extend-select = ["I"]
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$" # default, but here in case we want to change it

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ['I', 'F401', 'E402']
"conftest.py" = ["F401", "F403"]
'tests/fixtures/*.py' = ['F403']